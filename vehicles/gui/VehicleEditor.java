/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VehicleEditor.java
 *
 * Created on 26-Mar-2009, 15:02:43
 */

package vehicles.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.JSlider;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import vehicles.processing.Embedded;
import vehicles.*;
import javax.swing.ActionMap;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import org.jdesktop.application.Action;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;
import processing.core.*;

/**
 *
 * @author Niall O'Hara
 */
public class VehicleEditor extends javax.swing.JFrame {

    /** Creates new form VehicleEditor */
    public VehicleEditor(java.awt.Frame parent) {

        embed = new Embedded();
        initComponents();
        // important to call this whenever embedding a PApplet.
        // It ensures that the animation thread is started and
        // that other internal variables are properly set.
        embed.init();
    }

    @Action public void cancel() {
        dispose();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabContainer = new JTabbedPane();
        tab_Properties = new JPanel();
        panel_VehicleName = new JPanel();
        vehicleName_jTextField = new JTextField();
        panel_SelectedVehicle = new JPanel();
        selectedVehicle_jComboBox = new JComboBox();
        panel_VehicleDescription = new JPanel();
        jScrollPane6 = new JScrollPane();
        vehicleDescription_jTextArea = new JTextArea();
        panel_Author = new JPanel();
        author_jTextField = new JTextField();
        panel_Preview = new JPanel();
        panel_Processing = new JPanel();
        panel_Blue = new JPanel();
        slider_Blue = new JSlider();
        text_Blue = new JTextField();
        panel_Green = new JPanel();
        slider_Green = new JSlider();
        text_Green = new JTextField();
        panel_Red = new JPanel();
        slider_Red = new JSlider();
        text_Red = new JTextField();
        tab_Design = new JPanel();
        panel_LeftSensor = new JPanel();
        panel_Left_Light = new JPanel();
        slider_Left_Light = new JSlider();
        text_Left_Light = new JTextField();
        panel_Left_Heat = new JPanel();
        slider_Left_Heat = new JSlider();
        text_Left_Heat = new JTextField();
        panel_Left_Water = new JPanel();
        slider_Left_Water = new JSlider();
        text_Left_Water = new JTextField();
        panel_Left_Power = new JPanel();
        slider_Left_Power = new JSlider();
        text_Left_Power = new JTextField();
        panel_MotorStrength = new JPanel();
        slider_MotorStrength = new JSlider();
        text_MotorStrength = new JTextField();
        panel_RightSensor = new JPanel();
        panel_Right_Light = new JPanel();
        slider_Right_Light = new JSlider();
        text_Right_Light = new JTextField();
        panel_Right_Heat = new JPanel();
        slider_Right_Heat = new JSlider();
        text_Right_Heat = new JTextField();
        panel_Right_Water = new JPanel();
        slider_Right_Water = new JSlider();
        text_Right_Water = new JTextField();
        panel_Right_Power = new JPanel();
        slider_Right_Power = new JSlider();
        text_Right_Power = new JTextField();
        panel_Aggression = new JPanel();
        slider_Aggression = new JSlider();
        text_Aggression = new JTextField();
        button_Save = new JButton();
        button_SaveAs = new JButton();
        button_Cancel = new JButton();

        ResourceMap resourceMap = Application.getInstance(VehiclesApp.class).getContext().getResourceMap(VehicleEditor.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new Dimension(500, 520));
        setName("Form"); // NOI18N

        tabContainer.setName("tabContainer"); // NOI18N

        tab_Properties.setName("tab_Properties"); // NOI18N

        panel_VehicleName.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_VehicleName.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_VehicleName.border.titleFont"))); // NOI18N
        panel_VehicleName.setName("panel_VehicleName"); // NOI18N
        panel_VehicleName.setPreferredSize(new Dimension(224, 46));

        vehicleName_jTextField.setName("vehicleName_jTextField"); // NOI18N

        GroupLayout panel_VehicleNameLayout = new GroupLayout(panel_VehicleName);
        panel_VehicleName.setLayout(panel_VehicleNameLayout);
        panel_VehicleNameLayout.setHorizontalGroup(
            panel_VehicleNameLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(vehicleName_jTextField, GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );
        panel_VehicleNameLayout.setVerticalGroup(
            panel_VehicleNameLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(vehicleName_jTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        panel_SelectedVehicle.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_SelectedVehicle.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_SelectedVehicle.border.titleFont"))); // NOI18N
        panel_SelectedVehicle.setName("panel_SelectedVehicle"); // NOI18N

        selectedVehicle_jComboBox.setModel(new DefaultComboBoxModel(new String[] { "<new>", "Vehicle 1", "Vehicle 2", "Vehicle 3", "Vehicle 4", "Vehicle 5" }));
        selectedVehicle_jComboBox.setName("selectedVehicle_jComboBox"); // NOI18N

        GroupLayout panel_SelectedVehicleLayout = new GroupLayout(panel_SelectedVehicle);
        panel_SelectedVehicle.setLayout(panel_SelectedVehicleLayout);
        panel_SelectedVehicleLayout.setHorizontalGroup(
            panel_SelectedVehicleLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(selectedVehicle_jComboBox, 0, 443, Short.MAX_VALUE)
        );
        panel_SelectedVehicleLayout.setVerticalGroup(
            panel_SelectedVehicleLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(selectedVehicle_jComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        panel_VehicleDescription.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_VehicleDescription.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_VehicleDescription.border.titleFont"))); // NOI18N
        panel_VehicleDescription.setName("panel_VehicleDescription"); // NOI18N
        panel_VehicleDescription.setPreferredSize(new Dimension(220, 311));

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        vehicleDescription_jTextArea.setColumns(20);
        vehicleDescription_jTextArea.setRows(5);
        vehicleDescription_jTextArea.setName("vehicleDescription_jTextArea"); // NOI18N
        jScrollPane6.setViewportView(vehicleDescription_jTextArea);

        GroupLayout panel_VehicleDescriptionLayout = new GroupLayout(panel_VehicleDescription);
        panel_VehicleDescription.setLayout(panel_VehicleDescriptionLayout);
        panel_VehicleDescriptionLayout.setHorizontalGroup(
            panel_VehicleDescriptionLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(jScrollPane6, GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );
        panel_VehicleDescriptionLayout.setVerticalGroup(
            panel_VehicleDescriptionLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(jScrollPane6, GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
        );

        panel_Author.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_Author.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_Author.border.titleFont"))); // NOI18N
        panel_Author.setName("panel_Author"); // NOI18N

        author_jTextField.setName("author_jTextField"); // NOI18N

        GroupLayout panel_AuthorLayout = new GroupLayout(panel_Author);
        panel_Author.setLayout(panel_AuthorLayout);
        panel_AuthorLayout.setHorizontalGroup(
            panel_AuthorLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(author_jTextField, GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );
        panel_AuthorLayout.setVerticalGroup(
            panel_AuthorLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(author_jTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        panel_Preview.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_Preview.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_Preview.border.titleFont"))); // NOI18N
        panel_Preview.setName("panel_Preview"); // NOI18N
        panel_Preview.setPreferredSize(new Dimension(220, 311));

        panel_Processing.setName("panel_Processing"); // NOI18N
        panel_Processing.setLayout(new BorderLayout());

        panel_Blue.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Blue.border.title"))); // NOI18N
        panel_Blue.setName("panel_Blue"); // NOI18N

        slider_Blue.setMaximum(255);
        slider_Blue.setValue(128);
        slider_Blue.setName("slider_Blue"); // NOI18N
        slider_Blue.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Blue_StateChanged(evt);
            }
        });

        text_Blue.setEditable(false);
        text_Blue.setFont(resourceMap.getFont("text_Blue.font")); // NOI18N
        text_Blue.setText(resourceMap.getString("text_Blue.text")); // NOI18N
        text_Blue.setName("text_Blue"); // NOI18N

        GroupLayout panel_BlueLayout = new GroupLayout(panel_Blue);
        panel_Blue.setLayout(panel_BlueLayout);
        panel_BlueLayout.setHorizontalGroup(
            panel_BlueLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_BlueLayout.createSequentialGroup()
                .addComponent(slider_Blue, GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Blue, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
        );
        panel_BlueLayout.setVerticalGroup(
            panel_BlueLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Blue, GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
            .addComponent(slider_Blue, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel_Green.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Green.border.title"))); // NOI18N
        panel_Green.setName("panel_Green"); // NOI18N

        slider_Green.setMaximum(255);
        slider_Green.setValue(128);
        slider_Green.setName("slider_Green"); // NOI18N
        slider_Green.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Green_StateChanged(evt);
            }
        });

        text_Green.setEditable(false);
        text_Green.setFont(resourceMap.getFont("text_Green.font")); // NOI18N
        text_Green.setText(resourceMap.getString("text_Green.text")); // NOI18N
        text_Green.setName("text_Green"); // NOI18N

        GroupLayout panel_GreenLayout = new GroupLayout(panel_Green);
        panel_Green.setLayout(panel_GreenLayout);
        panel_GreenLayout.setHorizontalGroup(
            panel_GreenLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_GreenLayout.createSequentialGroup()
                .addComponent(slider_Green, GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Green, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
        );
        panel_GreenLayout.setVerticalGroup(
            panel_GreenLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Green, GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
            .addComponent(slider_Green, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel_Red.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Red.border.title"))); // NOI18N
        panel_Red.setName("panel_Red"); // NOI18N

        slider_Red.setMaximum(255);
        slider_Red.setValue(128);
        slider_Red.setName("slider_Red"); // NOI18N
        slider_Red.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Red_StateChanged(evt);
            }
        });

        text_Red.setEditable(false);
        text_Red.setFont(resourceMap.getFont("text_Red.font")); // NOI18N
        text_Red.setText(resourceMap.getString("text_Red.text")); // NOI18N
        text_Red.setName("text_Red"); // NOI18N

        GroupLayout panel_RedLayout = new GroupLayout(panel_Red);
        panel_Red.setLayout(panel_RedLayout);
        panel_RedLayout.setHorizontalGroup(
            panel_RedLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_RedLayout.createSequentialGroup()
                .addComponent(slider_Red, GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Red, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
        );
        panel_RedLayout.setVerticalGroup(
            panel_RedLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Red, GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
            .addComponent(slider_Red, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout panel_PreviewLayout = new GroupLayout(panel_Preview);
        panel_Preview.setLayout(panel_PreviewLayout);
        panel_PreviewLayout.setHorizontalGroup(
            panel_PreviewLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(panel_Red, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Green, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Blue, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Processing, GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
        );
        panel_PreviewLayout.setVerticalGroup(
            panel_PreviewLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_PreviewLayout.createSequentialGroup()
                .addComponent(panel_Processing, GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Red, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Green, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Blue, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Processing.add(embed, BorderLayout.CENTER);

        GroupLayout tab_PropertiesLayout = new GroupLayout(tab_Properties);
        tab_Properties.setLayout(tab_PropertiesLayout);
        tab_PropertiesLayout.setHorizontalGroup(
            tab_PropertiesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(tab_PropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_PropertiesLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(panel_SelectedVehicle, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tab_PropertiesLayout.createSequentialGroup()
                        .addGroup(tab_PropertiesLayout.createParallelGroup(Alignment.TRAILING)
                            .addComponent(panel_VehicleDescription, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(panel_Author, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_VehicleName, GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(panel_Preview, GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tab_PropertiesLayout.setVerticalGroup(
            tab_PropertiesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(tab_PropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_SelectedVehicle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(tab_PropertiesLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(tab_PropertiesLayout.createSequentialGroup()
                        .addComponent(panel_VehicleName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(panel_Author, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(panel_VehicleDescription, GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                    .addComponent(panel_Preview, GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabContainer.addTab("Properties", tab_Properties);

        tab_Design.setName("tab_Design"); // NOI18N

        panel_LeftSensor.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_LeftSensor.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_LeftSensor.border.titleFont"))); // NOI18N
        panel_LeftSensor.setName("panel_LeftSensor"); // NOI18N

        panel_Left_Light.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Left_Light.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Left_Light.setName("panel_Left_Light"); // NOI18N

        slider_Left_Light.setMajorTickSpacing(10);
        slider_Left_Light.setMaximum(50);
        slider_Left_Light.setMinimum(-50);
        slider_Left_Light.setMinorTickSpacing(2);
        slider_Left_Light.setOrientation(JSlider.VERTICAL);
        slider_Left_Light.setPaintLabels(true);
        slider_Left_Light.setPaintTicks(true);
        slider_Left_Light.setValue(0);
        slider_Left_Light.setName("slider_Left_Light"); // NOI18N
        slider_Left_Light.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Left_Light_StateChanged(evt);
            }
        });

        text_Left_Light.setEditable(false);
        text_Left_Light.setFont(resourceMap.getFont("text_Left_Light.font")); // NOI18N
        text_Left_Light.setHorizontalAlignment(JTextField.CENTER);
        text_Left_Light.setText(resourceMap.getString("text_Left_Light.text")); // NOI18N
        text_Left_Light.setName("text_Left_Light"); // NOI18N

        GroupLayout panel_Left_LightLayout = new GroupLayout(panel_Left_Light);
        panel_Left_Light.setLayout(panel_Left_LightLayout);
        panel_Left_LightLayout.setHorizontalGroup(
            panel_Left_LightLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Left_Light, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Left_Light, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Left_LightLayout.setVerticalGroup(
            panel_Left_LightLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Left_LightLayout.createSequentialGroup()
                .addComponent(slider_Left_Light, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Left_Light, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Left_Heat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Left_Heat.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Left_Heat.setName("panel_Left_Heat"); // NOI18N

        slider_Left_Heat.setMajorTickSpacing(10);
        slider_Left_Heat.setMaximum(50);
        slider_Left_Heat.setMinimum(-50);
        slider_Left_Heat.setMinorTickSpacing(2);
        slider_Left_Heat.setOrientation(JSlider.VERTICAL);
        slider_Left_Heat.setPaintLabels(true);
        slider_Left_Heat.setPaintTicks(true);
        slider_Left_Heat.setSnapToTicks(true);
        slider_Left_Heat.setValue(0);
        slider_Left_Heat.setName("slider_Left_Heat"); // NOI18N
        slider_Left_Heat.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Left_Heat_StateChanged(evt);
            }
        });

        text_Left_Heat.setEditable(false);
        text_Left_Heat.setFont(resourceMap.getFont("text_Left_Heat.font")); // NOI18N
        text_Left_Heat.setHorizontalAlignment(JTextField.CENTER);
        text_Left_Heat.setText(resourceMap.getString("text_Left_Heat.text")); // NOI18N
        text_Left_Heat.setName("text_Left_Heat"); // NOI18N

        GroupLayout panel_Left_HeatLayout = new GroupLayout(panel_Left_Heat);
        panel_Left_Heat.setLayout(panel_Left_HeatLayout);
        panel_Left_HeatLayout.setHorizontalGroup(
            panel_Left_HeatLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Left_Heat, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Left_Heat, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Left_HeatLayout.setVerticalGroup(
            panel_Left_HeatLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Left_HeatLayout.createSequentialGroup()
                .addComponent(slider_Left_Heat, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Left_Heat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Left_Water.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Left_Water.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Left_Water.setName("panel_Left_Water"); // NOI18N

        slider_Left_Water.setMajorTickSpacing(10);
        slider_Left_Water.setMaximum(50);
        slider_Left_Water.setMinimum(-50);
        slider_Left_Water.setMinorTickSpacing(2);
        slider_Left_Water.setOrientation(JSlider.VERTICAL);
        slider_Left_Water.setPaintLabels(true);
        slider_Left_Water.setPaintTicks(true);
        slider_Left_Water.setSnapToTicks(true);
        slider_Left_Water.setValue(0);
        slider_Left_Water.setName("slider_Left_Water"); // NOI18N
        slider_Left_Water.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Left_Water_StateChanged(evt);
            }
        });

        text_Left_Water.setEditable(false);
        text_Left_Water.setFont(resourceMap.getFont("text_Left_Water.font")); // NOI18N
        text_Left_Water.setHorizontalAlignment(JTextField.CENTER);
        text_Left_Water.setText(resourceMap.getString("text_Left_Water.text")); // NOI18N
        text_Left_Water.setName("text_Left_Water"); // NOI18N

        GroupLayout panel_Left_WaterLayout = new GroupLayout(panel_Left_Water);
        panel_Left_Water.setLayout(panel_Left_WaterLayout);
        panel_Left_WaterLayout.setHorizontalGroup(
            panel_Left_WaterLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Left_Water, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Left_Water, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Left_WaterLayout.setVerticalGroup(
            panel_Left_WaterLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Left_WaterLayout.createSequentialGroup()
                .addComponent(slider_Left_Water, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Left_Water, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Left_Power.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Left_Power.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Left_Power.setName("panel_Left_Power"); // NOI18N

        slider_Left_Power.setMajorTickSpacing(10);
        slider_Left_Power.setMaximum(50);
        slider_Left_Power.setMinimum(-50);
        slider_Left_Power.setMinorTickSpacing(2);
        slider_Left_Power.setOrientation(JSlider.VERTICAL);
        slider_Left_Power.setPaintLabels(true);
        slider_Left_Power.setPaintTicks(true);
        slider_Left_Power.setSnapToTicks(true);
        slider_Left_Power.setValue(0);
        slider_Left_Power.setName("slider_Left_Power"); // NOI18N
        slider_Left_Power.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Left_Power_StateChanged(evt);
            }
        });

        text_Left_Power.setEditable(false);
        text_Left_Power.setFont(resourceMap.getFont("text_Left_Power.font")); // NOI18N
        text_Left_Power.setHorizontalAlignment(JTextField.CENTER);
        text_Left_Power.setText(resourceMap.getString("text_Left_Power.text")); // NOI18N
        text_Left_Power.setName("text_Left_Power"); // NOI18N

        GroupLayout panel_Left_PowerLayout = new GroupLayout(panel_Left_Power);
        panel_Left_Power.setLayout(panel_Left_PowerLayout);
        panel_Left_PowerLayout.setHorizontalGroup(
            panel_Left_PowerLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Left_Power, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Left_Power, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Left_PowerLayout.setVerticalGroup(
            panel_Left_PowerLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Left_PowerLayout.createSequentialGroup()
                .addComponent(slider_Left_Power, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Left_Power, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        GroupLayout panel_LeftSensorLayout = new GroupLayout(panel_LeftSensor);
        panel_LeftSensor.setLayout(panel_LeftSensorLayout);
        panel_LeftSensorLayout.setHorizontalGroup(
            panel_LeftSensorLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_LeftSensorLayout.createSequentialGroup()
                .addComponent(panel_Left_Light, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Left_Heat, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Left_Water, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Left_Power, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_LeftSensorLayout.setVerticalGroup(
            panel_LeftSensorLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(panel_Left_Light, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Left_Heat, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Left_Water, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Left_Power, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel_MotorStrength.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_MotorStrength.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_MotorStrength.border.titleFont"))); // NOI18N
        panel_MotorStrength.setToolTipText(resourceMap.getString("panel_MotorStrength.toolTipText")); // NOI18N
        panel_MotorStrength.setMinimumSize(new Dimension(114, 0));
        panel_MotorStrength.setName("panel_MotorStrength"); // NOI18N

        slider_MotorStrength.setMajorTickSpacing(10);
        slider_MotorStrength.setMinorTickSpacing(2);
        slider_MotorStrength.setOrientation(JSlider.VERTICAL);
        slider_MotorStrength.setPaintLabels(true);
        slider_MotorStrength.setPaintTicks(true);
        slider_MotorStrength.setSnapToTicks(true);
        slider_MotorStrength.setName("slider_MotorStrength"); // NOI18N
        slider_MotorStrength.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_MotorStrength_StateChanged(evt);
            }
        });

        text_MotorStrength.setEditable(false);
        text_MotorStrength.setFont(resourceMap.getFont("text_MotorStrength.font")); // NOI18N
        text_MotorStrength.setHorizontalAlignment(JTextField.CENTER);
        text_MotorStrength.setText(resourceMap.getString("text_MotorStrength.text")); // NOI18N
        text_MotorStrength.setName("text_MotorStrength"); // NOI18N

        GroupLayout panel_MotorStrengthLayout = new GroupLayout(panel_MotorStrength);
        panel_MotorStrength.setLayout(panel_MotorStrengthLayout);
        panel_MotorStrengthLayout.setHorizontalGroup(
            panel_MotorStrengthLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_MotorStrength, GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
            .addGroup(panel_MotorStrengthLayout.createSequentialGroup()
                .addComponent(slider_MotorStrength, GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_MotorStrengthLayout.setVerticalGroup(
            panel_MotorStrengthLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_MotorStrengthLayout.createSequentialGroup()
                .addComponent(slider_MotorStrength, GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_MotorStrength, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        );

        panel_RightSensor.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_RightSensor.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_RightSensor.border.titleFont"))); // NOI18N
        panel_RightSensor.setName("panel_RightSensor"); // NOI18N

        panel_Right_Light.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Right_Light.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Right_Light.setName("panel_Right_Light"); // NOI18N

        slider_Right_Light.setMajorTickSpacing(10);
        slider_Right_Light.setMaximum(50);
        slider_Right_Light.setMinimum(-50);
        slider_Right_Light.setMinorTickSpacing(2);
        slider_Right_Light.setOrientation(JSlider.VERTICAL);
        slider_Right_Light.setPaintLabels(true);
        slider_Right_Light.setPaintTicks(true);
        slider_Right_Light.setSnapToTicks(true);
        slider_Right_Light.setValue(0);
        slider_Right_Light.setName("slider_Right_Light"); // NOI18N
        slider_Right_Light.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Right_Light_StateChanged(evt);
            }
        });

        text_Right_Light.setEditable(false);
        text_Right_Light.setFont(resourceMap.getFont("text_Right_Light.font")); // NOI18N
        text_Right_Light.setHorizontalAlignment(JTextField.CENTER);
        text_Right_Light.setText(resourceMap.getString("text_Right_Light.text")); // NOI18N
        text_Right_Light.setName("text_Right_Light"); // NOI18N

        GroupLayout panel_Right_LightLayout = new GroupLayout(panel_Right_Light);
        panel_Right_Light.setLayout(panel_Right_LightLayout);
        panel_Right_LightLayout.setHorizontalGroup(
            panel_Right_LightLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Right_Light, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Right_Light, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Right_LightLayout.setVerticalGroup(
            panel_Right_LightLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Right_LightLayout.createSequentialGroup()
                .addComponent(slider_Right_Light, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Right_Light, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Right_Heat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Right_Heat.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Right_Heat.setName("panel_Right_Heat"); // NOI18N

        slider_Right_Heat.setMajorTickSpacing(10);
        slider_Right_Heat.setMaximum(50);
        slider_Right_Heat.setMinimum(-50);
        slider_Right_Heat.setMinorTickSpacing(2);
        slider_Right_Heat.setOrientation(JSlider.VERTICAL);
        slider_Right_Heat.setPaintLabels(true);
        slider_Right_Heat.setPaintTicks(true);
        slider_Right_Heat.setSnapToTicks(true);
        slider_Right_Heat.setValue(0);
        slider_Right_Heat.setName("slider_Right_Heat"); // NOI18N
        slider_Right_Heat.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Right_Heat_StateChanged(evt);
            }
        });

        text_Right_Heat.setEditable(false);
        text_Right_Heat.setFont(resourceMap.getFont("text_Right_Heat.font")); // NOI18N
        text_Right_Heat.setHorizontalAlignment(JTextField.CENTER);
        text_Right_Heat.setText(resourceMap.getString("text_Right_Heat.text")); // NOI18N
        text_Right_Heat.setName("text_Right_Heat"); // NOI18N

        GroupLayout panel_Right_HeatLayout = new GroupLayout(panel_Right_Heat);
        panel_Right_Heat.setLayout(panel_Right_HeatLayout);
        panel_Right_HeatLayout.setHorizontalGroup(
            panel_Right_HeatLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Right_Heat, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Right_Heat, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Right_HeatLayout.setVerticalGroup(
            panel_Right_HeatLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Right_HeatLayout.createSequentialGroup()
                .addComponent(slider_Right_Heat, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Right_Heat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Right_Water.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Right_Water.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Right_Water.setName("panel_Right_Water"); // NOI18N

        slider_Right_Water.setMajorTickSpacing(10);
        slider_Right_Water.setMaximum(50);
        slider_Right_Water.setMinimum(-50);
        slider_Right_Water.setMinorTickSpacing(2);
        slider_Right_Water.setOrientation(JSlider.VERTICAL);
        slider_Right_Water.setPaintLabels(true);
        slider_Right_Water.setPaintTicks(true);
        slider_Right_Water.setSnapToTicks(true);
        slider_Right_Water.setValue(0);
        slider_Right_Water.setName("slider_Right_Water"); // NOI18N
        slider_Right_Water.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Right_Water_StateChanged(evt);
            }
        });

        text_Right_Water.setEditable(false);
        text_Right_Water.setFont(resourceMap.getFont("text_Right_Water.font")); // NOI18N
        text_Right_Water.setHorizontalAlignment(JTextField.CENTER);
        text_Right_Water.setText(resourceMap.getString("text_Right_Water.text")); // NOI18N
        text_Right_Water.setName("text_Right_Water"); // NOI18N

        GroupLayout panel_Right_WaterLayout = new GroupLayout(panel_Right_Water);
        panel_Right_Water.setLayout(panel_Right_WaterLayout);
        panel_Right_WaterLayout.setHorizontalGroup(
            panel_Right_WaterLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Right_Water, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Right_Water, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Right_WaterLayout.setVerticalGroup(
            panel_Right_WaterLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Right_WaterLayout.createSequentialGroup()
                .addComponent(slider_Right_Water, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Right_Water, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        panel_Right_Power.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), resourceMap.getString("panel_Right_Power.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION)); // NOI18N
        panel_Right_Power.setName("panel_Right_Power"); // NOI18N

        slider_Right_Power.setMajorTickSpacing(10);
        slider_Right_Power.setMaximum(50);
        slider_Right_Power.setMinimum(-50);
        slider_Right_Power.setMinorTickSpacing(2);
        slider_Right_Power.setOrientation(JSlider.VERTICAL);
        slider_Right_Power.setPaintLabels(true);
        slider_Right_Power.setPaintTicks(true);
        slider_Right_Power.setSnapToTicks(true);
        slider_Right_Power.setValue(0);
        slider_Right_Power.setName("slider_Right_Power"); // NOI18N
        slider_Right_Power.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Right_Power_StateChanged(evt);
            }
        });

        text_Right_Power.setEditable(false);
        text_Right_Power.setFont(resourceMap.getFont("text_Right_Power.font")); // NOI18N
        text_Right_Power.setHorizontalAlignment(JTextField.CENTER);
        text_Right_Power.setText(resourceMap.getString("text_Right_Power.text")); // NOI18N
        text_Right_Power.setName("text_Right_Power"); // NOI18N

        GroupLayout panel_Right_PowerLayout = new GroupLayout(panel_Right_Power);
        panel_Right_Power.setLayout(panel_Right_PowerLayout);
        panel_Right_PowerLayout.setHorizontalGroup(
            panel_Right_PowerLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Right_Power, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(slider_Right_Power, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );
        panel_Right_PowerLayout.setVerticalGroup(
            panel_Right_PowerLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_Right_PowerLayout.createSequentialGroup()
                .addComponent(slider_Right_Power, GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Right_Power, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        GroupLayout panel_RightSensorLayout = new GroupLayout(panel_RightSensor);
        panel_RightSensor.setLayout(panel_RightSensorLayout);
        panel_RightSensorLayout.setHorizontalGroup(
            panel_RightSensorLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_RightSensorLayout.createSequentialGroup()
                .addComponent(panel_Right_Light, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Right_Heat, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Right_Water, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Right_Power, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_RightSensorLayout.setVerticalGroup(
            panel_RightSensorLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(panel_Right_Light, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Right_Heat, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Right_Water, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Right_Power, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel_Aggression.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_Aggression.border.title"), TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_Aggression.border.titleFont"))); // NOI18N
        panel_Aggression.setName("panel_Aggression"); // NOI18N

        slider_Aggression.setMajorTickSpacing(10);
        slider_Aggression.setMinorTickSpacing(2);
        slider_Aggression.setOrientation(JSlider.VERTICAL);
        slider_Aggression.setPaintLabels(true);
        slider_Aggression.setPaintTicks(true);
        slider_Aggression.setSnapToTicks(true);
        slider_Aggression.setName("slider_Aggression"); // NOI18N
        slider_Aggression.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                slider_Aggression_StateChanged(evt);
            }
        });

        text_Aggression.setEditable(false);
        text_Aggression.setFont(resourceMap.getFont("text_Aggression.font")); // NOI18N
        text_Aggression.setHorizontalAlignment(JTextField.CENTER);
        text_Aggression.setText(resourceMap.getString("text_Aggression.text")); // NOI18N
        text_Aggression.setName("text_Aggression"); // NOI18N

        GroupLayout panel_AggressionLayout = new GroupLayout(panel_Aggression);
        panel_Aggression.setLayout(panel_AggressionLayout);
        panel_AggressionLayout.setHorizontalGroup(
            panel_AggressionLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Aggression, GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
            .addGroup(panel_AggressionLayout.createSequentialGroup()
                .addComponent(slider_Aggression, GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_AggressionLayout.setVerticalGroup(
            panel_AggressionLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_AggressionLayout.createSequentialGroup()
                .addComponent(slider_Aggression, GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(text_Aggression, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        );

        GroupLayout tab_DesignLayout = new GroupLayout(tab_Design);
        tab_Design.setLayout(tab_DesignLayout);
        tab_DesignLayout.setHorizontalGroup(
            tab_DesignLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(tab_DesignLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_DesignLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(panel_RightSensor, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_LeftSensor, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(tab_DesignLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(panel_MotorStrength, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_Aggression, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tab_DesignLayout.setVerticalGroup(
            tab_DesignLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(tab_DesignLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_DesignLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(panel_MotorStrength, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_LeftSensor, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(tab_DesignLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(panel_RightSensor, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_Aggression, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        panel_LeftSensor.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel6.AccessibleContext.accessibleName")); // NOI18N

        tabContainer.addTab(resourceMap.getString("tab_Design.TabConstraints.tabTitle"), tab_Design); // NOI18N

        button_Save.setText(resourceMap.getString("button_Save.text")); // NOI18N
        button_Save.setName("button_Save"); // NOI18N

        button_SaveAs.setText(resourceMap.getString("button_SaveAs.text")); // NOI18N
        button_SaveAs.setName("button_SaveAs"); // NOI18N

        ActionMap actionMap = Application.getInstance(VehiclesApp.class).getContext().getActionMap(VehicleEditor.class, this);
        button_Cancel.setAction(actionMap.get("cancel")); // NOI18N
        button_Cancel.setText(resourceMap.getString("button_Cancel.text")); // NOI18N
        button_Cancel.setName("button_Cancel"); // NOI18N

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(button_Save)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(button_SaveAs)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(button_Cancel))
                    .addComponent(tabContainer, GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabContainer, GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(button_Cancel)
                    .addComponent(button_SaveAs)
                    .addComponent(button_Save))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void slider_Left_Light_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Left_Light_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Left_Light.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Left_Light_StateChanged

    private void slider_Left_Heat_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Left_Heat_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Left_Heat.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Left_Heat_StateChanged

    private void slider_Left_Water_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Left_Water_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Left_Water.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Left_Water_StateChanged

    private void slider_Left_Power_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Left_Power_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Left_Power.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Left_Power_StateChanged

    private void slider_MotorStrength_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_MotorStrength_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_MotorStrength.setText(Integer.toString(value));
}//GEN-LAST:event_slider_MotorStrength_StateChanged

    private void slider_Right_Light_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Right_Light_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Right_Light.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Right_Light_StateChanged

    private void slider_Right_Heat_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Right_Heat_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Right_Heat.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Right_Heat_StateChanged

    private void slider_Right_Water_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Right_Water_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Right_Water.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Right_Water_StateChanged

    private void slider_Right_Power_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Right_Power_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Right_Power.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Right_Power_StateChanged

    private void slider_Aggression_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Aggression_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Aggression.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Aggression_StateChanged

    private void slider_Red_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Red_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Red.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Red_StateChanged

    private void slider_Green_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Green_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Green.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Green_StateChanged

    private void slider_Blue_StateChanged(ChangeEvent evt) {//GEN-FIRST:event_slider_Blue_StateChanged
        JSlider tempSlider = (JSlider) evt.getSource();
        int value = tempSlider.getValue();
        text_Blue.setText(Integer.toString(value));
}//GEN-LAST:event_slider_Blue_StateChanged
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField author_jTextField;
    private JButton button_Cancel;
    private JButton button_Save;
    private JButton button_SaveAs;
    private JScrollPane jScrollPane6;
    private JPanel panel_Aggression;
    private JPanel panel_Author;
    private JPanel panel_Blue;
    private JPanel panel_Green;
    private JPanel panel_LeftSensor;
    private JPanel panel_Left_Heat;
    private JPanel panel_Left_Light;
    private JPanel panel_Left_Power;
    private JPanel panel_Left_Water;
    private JPanel panel_MotorStrength;
    private JPanel panel_Preview;
    private JPanel panel_Processing;
    private JPanel panel_Red;
    private JPanel panel_RightSensor;
    private JPanel panel_Right_Heat;
    private JPanel panel_Right_Light;
    private JPanel panel_Right_Power;
    private JPanel panel_Right_Water;
    private JPanel panel_SelectedVehicle;
    private JPanel panel_VehicleDescription;
    private JPanel panel_VehicleName;
    private JComboBox selectedVehicle_jComboBox;
    private JSlider slider_Aggression;
    private JSlider slider_Blue;
    private JSlider slider_Green;
    private JSlider slider_Left_Heat;
    private JSlider slider_Left_Light;
    private JSlider slider_Left_Power;
    private JSlider slider_Left_Water;
    private JSlider slider_MotorStrength;
    private JSlider slider_Red;
    private JSlider slider_Right_Heat;
    private JSlider slider_Right_Light;
    private JSlider slider_Right_Power;
    private JSlider slider_Right_Water;
    private JTabbedPane tabContainer;
    private JPanel tab_Design;
    private JPanel tab_Properties;
    private JTextField text_Aggression;
    private JTextField text_Blue;
    private JTextField text_Green;
    private JTextField text_Left_Heat;
    private JTextField text_Left_Light;
    private JTextField text_Left_Power;
    private JTextField text_Left_Water;
    private JTextField text_MotorStrength;
    private JTextField text_Red;
    private JTextField text_Right_Heat;
    private JTextField text_Right_Light;
    private JTextField text_Right_Power;
    private JTextField text_Right_Water;
    private JTextArea vehicleDescription_jTextArea;
    private JTextField vehicleName_jTextField;
    // End of variables declaration//GEN-END:variables
    private PApplet embed;
}
