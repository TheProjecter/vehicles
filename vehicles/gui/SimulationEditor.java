package vehicles.gui;

import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import javax.swing.JComboBox;
import javax.swing.border.TitledBorder;
import vehicles.processing.Embedded;
import vehicles.*;
import javax.swing.AbstractListModel;
import javax.swing.ActionMap;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ListSelectionModel;
import org.jdesktop.application.Action;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;
import processing.core.*;
import vehicles.simulation.*;
import vehicles.util.*;

/*
 * SimulationEditor.java
 *
 * Created on 28-Mar-2009, 14:51:37
 * @author Niall O'Hara
 */
public class SimulationEditor extends javax.swing.JFrame {

    /** Creates new form SimulationEditor */
    public SimulationEditor(java.awt.Frame parent) {
        simulationArray = UtilMethods.getSimulationsFromFolder("xml/simulations");
        simulationDropDown = new DefaultComboBoxModel(simulationArray);

        embed = new Embedded();
        initComponents();
        // important to call this whenever embedding a PApplet.
        // It ensures that the animation thread is started and
        // that other internal variables are properly set.
        embed.init();
        populateFields(simulationArray[0]);
    }

    @Action public void cancel() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_SelectedSimulation = new JPanel();
        dropdown_SelectedSimulation = new JComboBox();
        tabContainer = new JTabbedPane();
        tab_Properties = new JPanel();
        panel_Name = new JPanel();
        text_Name = new JTextField();
        panel_Configuration = new JPanel();
        label_Evolution = new JLabel();
        radio_Evolution_On = new JRadioButton();
        radio_Evolution_Off = new JRadioButton();
        label_Perishable = new JLabel();
        radio_Perishable_On = new JRadioButton();
        radio_Perishable_Off = new JRadioButton();
        panel_Description = new JPanel();
        scrollpanel_Description = new JScrollPane();
        text_Description = new JTextArea();
        panel_Author = new JPanel();
        text_Author = new JTextField();
        panel_LastModified = new JPanel();
        text_LastModified = new JTextField();
        tab_Vehicles = new JPanel();
        panel_AvailableVehicles = new JPanel();
        scrollpanel_AvailableVehicles = new JScrollPane();
        list_AvailableVehicles = new JList();
        panel_AddRemoveVehicles = new JPanel();
        button_AddVehicle = new JButton();
        button_AddAllVehicle = new JButton();
        button_RemoveVehicle = new JButton();
        button_RemoveAllVehicle = new JButton();
        panel_PreviewVehicle = new JPanel();
        processing_Vehicle = new JPanel();
        panel_SelectedVehicles = new JPanel();
        scrollpanel_SelectedVehicles = new JScrollPane();
        list_SelectedVehicles = new JList();
        tab_Environment = new JPanel();
        panel_AvailableEnvironments = new JPanel();
        scrollpanel_AvailableEnvironments = new JScrollPane();
        list_AvailableEnvironments = new JList();
        panel_SelectedEnvironment = new JPanel();
        scrollpanel_SelectedEnvironment = new JScrollPane();
        list_SelectedEnvironment = new JList();
        panel_SetEnvironment = new JPanel();
        button_SetEnvironment = new JButton();
        panel_PreviewEnvironment = new JPanel();
        processing_Environment = new JPanel();
        text_Status = new JTextField();
        button_Save = new JButton();
        button_SaveAsNew = new JButton();
        button_Cancel = new JButton();

        ResourceMap resourceMap = Application.getInstance(VehiclesApp.class).getContext().getResourceMap(SimulationEditor.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addWindowFocusListener(new WindowFocusListener() {
            public void windowGainedFocus(WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(WindowEvent evt) {
            }
        });

        panel_SelectedSimulation.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_SelectedSimulation.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_SelectedSimulation.border.titleFont"))); // NOI18N
        panel_SelectedSimulation.setName("panel_SelectedSimulation"); // NOI18N

        dropdown_SelectedSimulation.setMaximumRowCount(4);
        dropdown_SelectedSimulation.setModel(simulationDropDown);
        dropdown_SelectedSimulation.setName("dropdown_SelectedSimulation"); // NOI18N
        dropdown_SelectedSimulation.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                dropdown_SelectedSimulationItemStateChanged(evt);
            }
        });

        GroupLayout panel_SelectedSimulationLayout = new GroupLayout(panel_SelectedSimulation);
        panel_SelectedSimulation.setLayout(panel_SelectedSimulationLayout);
        panel_SelectedSimulationLayout.setHorizontalGroup(
            panel_SelectedSimulationLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(dropdown_SelectedSimulation, 0, 597, Short.MAX_VALUE)
        );
        panel_SelectedSimulationLayout.setVerticalGroup(
            panel_SelectedSimulationLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(dropdown_SelectedSimulation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        tabContainer.setName("tabContainer"); // NOI18N

        tab_Properties.setName("tab_Properties"); // NOI18N

        panel_Name.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Name.border.title"))); // NOI18N
        panel_Name.setName("panel_Name"); // NOI18N

        text_Name.setText(resourceMap.getString("text_Name.text")); // NOI18N
        text_Name.setName("text_Name"); // NOI18N

        GroupLayout panel_NameLayout = new GroupLayout(panel_Name);
        panel_Name.setLayout(panel_NameLayout);
        panel_NameLayout.setHorizontalGroup(
            panel_NameLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Name, GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );
        panel_NameLayout.setVerticalGroup(
            panel_NameLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Name, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        panel_Configuration.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Configuration.border.title"))); // NOI18N
        panel_Configuration.setName("panel_Configuration"); // NOI18N

        label_Evolution.setText(resourceMap.getString("label_Evolution.text")); // NOI18N
        label_Evolution.setName("label_Evolution"); // NOI18N

        radio_Evolution_On.setText(resourceMap.getString("radio_Evolution_On.text")); // NOI18N
        radio_Evolution_On.setName("radio_Evolution_On"); // NOI18N

        radio_Evolution_Off.setSelected(true);
        radio_Evolution_Off.setText(resourceMap.getString("radio_Evolution_Off.text")); // NOI18N
        radio_Evolution_Off.setName("radio_Evolution_Off"); // NOI18N

        label_Perishable.setText(resourceMap.getString("label_Perishable.text")); // NOI18N
        label_Perishable.setName("label_Perishable"); // NOI18N

        radio_Perishable_On.setText(resourceMap.getString("radio_Perishable_On.text")); // NOI18N
        radio_Perishable_On.setName("radio_Perishable_On"); // NOI18N

        radio_Perishable_Off.setSelected(true);
        radio_Perishable_Off.setText(resourceMap.getString("radio_Perishable_Off.text")); // NOI18N
        radio_Perishable_Off.setName("radio_Perishable_Off"); // NOI18N

        GroupLayout panel_ConfigurationLayout = new GroupLayout(panel_Configuration);
        panel_Configuration.setLayout(panel_ConfigurationLayout);
        panel_ConfigurationLayout.setHorizontalGroup(
            panel_ConfigurationLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_ConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_ConfigurationLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(panel_ConfigurationLayout.createSequentialGroup()
                        .addComponent(label_Perishable)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(radio_Perishable_On)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(radio_Perishable_Off))
                    .addGroup(panel_ConfigurationLayout.createSequentialGroup()
                        .addComponent(label_Evolution)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(radio_Evolution_On)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(radio_Evolution_Off)))
                .addContainerGap(389, Short.MAX_VALUE))
        );
        panel_ConfigurationLayout.setVerticalGroup(
            panel_ConfigurationLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_ConfigurationLayout.createSequentialGroup()
                .addGroup(panel_ConfigurationLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(label_Evolution)
                    .addComponent(radio_Evolution_On)
                    .addComponent(radio_Evolution_Off))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(panel_ConfigurationLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(label_Perishable)
                    .addComponent(radio_Perishable_On)
                    .addComponent(radio_Perishable_Off)))
        );

        panel_Description.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Description.border.title"))); // NOI18N
        panel_Description.setName("panel_Description"); // NOI18N

        scrollpanel_Description.setName("scrollpanel_Description"); // NOI18N

        text_Description.setColumns(20);
        text_Description.setRows(5);
        text_Description.setName("text_Description"); // NOI18N
        scrollpanel_Description.setViewportView(text_Description);

        GroupLayout panel_DescriptionLayout = new GroupLayout(panel_Description);
        panel_Description.setLayout(panel_DescriptionLayout);
        panel_DescriptionLayout.setHorizontalGroup(
            panel_DescriptionLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_Description, GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );
        panel_DescriptionLayout.setVerticalGroup(
            panel_DescriptionLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_Description, GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
        );

        panel_Author.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_Author.border.title"))); // NOI18N
        panel_Author.setName("panel_Author"); // NOI18N

        text_Author.setText(resourceMap.getString("text_Author.text")); // NOI18N
        text_Author.setName("text_Author"); // NOI18N

        GroupLayout panel_AuthorLayout = new GroupLayout(panel_Author);
        panel_Author.setLayout(panel_AuthorLayout);
        panel_AuthorLayout.setHorizontalGroup(
            panel_AuthorLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Author, GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
        panel_AuthorLayout.setVerticalGroup(
            panel_AuthorLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_Author, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        panel_LastModified.setBorder(BorderFactory.createTitledBorder(null, resourceMap.getString("panel_LastModified.border.title"), TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, resourceMap.getFont("panel_LastModified.border.titleFont"))); // NOI18N
        panel_LastModified.setName("panel_LastModified"); // NOI18N

        text_LastModified.setEditable(false);
        text_LastModified.setBorder(BorderFactory.createEmptyBorder(1, 4, 1, 1));
        text_LastModified.setName("text_LastModified"); // NOI18N

        GroupLayout panel_LastModifiedLayout = new GroupLayout(panel_LastModified);
        panel_LastModified.setLayout(panel_LastModifiedLayout);
        panel_LastModifiedLayout.setHorizontalGroup(
            panel_LastModifiedLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_LastModified, GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );
        panel_LastModifiedLayout.setVerticalGroup(
            panel_LastModifiedLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(text_LastModified, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        GroupLayout tab_PropertiesLayout = new GroupLayout(tab_Properties);
        tab_Properties.setLayout(tab_PropertiesLayout);
        tab_PropertiesLayout.setHorizontalGroup(
            tab_PropertiesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, tab_PropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_PropertiesLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(panel_Description, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_LastModified, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_Configuration, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tab_PropertiesLayout.createSequentialGroup()
                        .addComponent(panel_Name, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(panel_Author, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tab_PropertiesLayout.setVerticalGroup(
            tab_PropertiesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(tab_PropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_PropertiesLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(panel_Name, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel_Author, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Configuration, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_Description, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_LastModified, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabContainer.addTab(resourceMap.getString("tab_Properties.TabConstraints.tabTitle"), tab_Properties); // NOI18N

        tab_Vehicles.setName("tab_Vehicles"); // NOI18N

        panel_AvailableVehicles.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_AvailableVehicles.border.title"))); // NOI18N
        panel_AvailableVehicles.setName("panel_AvailableVehicles"); // NOI18N

        scrollpanel_AvailableVehicles.setName("scrollpanel_AvailableVehicles"); // NOI18N

        list_AvailableVehicles.setModel(new AbstractListModel() {
            String[] strings = { "Vehicle 1", "Vehicle 2", "Vehicle 3", "Vehicle 4", "Vehicle 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_AvailableVehicles.setName("list_AvailableVehicles"); // NOI18N
        scrollpanel_AvailableVehicles.setViewportView(list_AvailableVehicles);

        GroupLayout panel_AvailableVehiclesLayout = new GroupLayout(panel_AvailableVehicles);
        panel_AvailableVehicles.setLayout(panel_AvailableVehiclesLayout);
        panel_AvailableVehiclesLayout.setHorizontalGroup(
            panel_AvailableVehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_AvailableVehicles, GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );
        panel_AvailableVehiclesLayout.setVerticalGroup(
            panel_AvailableVehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_AvailableVehicles, GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
        );

        panel_AddRemoveVehicles.setName("panel_AddRemoveVehicles"); // NOI18N

        button_AddVehicle.setText(resourceMap.getString("button_AddVehicle.text")); // NOI18N
        button_AddVehicle.setName("button_AddVehicle"); // NOI18N

        button_AddAllVehicle.setText(resourceMap.getString("button_AddAllVehicle.text")); // NOI18N
        button_AddAllVehicle.setName("button_AddAllVehicle"); // NOI18N

        button_RemoveVehicle.setText(resourceMap.getString("button_RemoveVehicle.text")); // NOI18N
        button_RemoveVehicle.setName("button_RemoveVehicle"); // NOI18N

        button_RemoveAllVehicle.setText(resourceMap.getString("button_RemoveAllVehicle.text")); // NOI18N
        button_RemoveAllVehicle.setName("button_RemoveAllVehicle"); // NOI18N

        panel_PreviewVehicle.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_PreviewVehicle.border.title"))); // NOI18N
        panel_PreviewVehicle.setName("panel_PreviewVehicle"); // NOI18N

        processing_Vehicle.setBackground(resourceMap.getColor("processing_Vehicle.background")); // NOI18N
        processing_Vehicle.setName("processing_Vehicle"); // NOI18N

        GroupLayout processing_VehicleLayout = new GroupLayout(processing_Vehicle);
        processing_Vehicle.setLayout(processing_VehicleLayout);
        processing_VehicleLayout.setHorizontalGroup(
            processing_VehicleLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );
        processing_VehicleLayout.setVerticalGroup(
            processing_VehicleLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 165, Short.MAX_VALUE)
        );

        GroupLayout panel_PreviewVehicleLayout = new GroupLayout(panel_PreviewVehicle);
        panel_PreviewVehicle.setLayout(panel_PreviewVehicleLayout);
        panel_PreviewVehicleLayout.setHorizontalGroup(
            panel_PreviewVehicleLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(processing_Vehicle, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_PreviewVehicleLayout.setVerticalGroup(
            panel_PreviewVehicleLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(processing_Vehicle, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout panel_AddRemoveVehiclesLayout = new GroupLayout(panel_AddRemoveVehicles);
        panel_AddRemoveVehicles.setLayout(panel_AddRemoveVehiclesLayout);
        panel_AddRemoveVehiclesLayout.setHorizontalGroup(
            panel_AddRemoveVehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_AddRemoveVehiclesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_AddRemoveVehiclesLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(button_AddVehicle, GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(button_AddAllVehicle, GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(button_RemoveVehicle, GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(button_RemoveAllVehicle, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(panel_PreviewVehicle, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_AddRemoveVehiclesLayout.setVerticalGroup(
            panel_AddRemoveVehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_AddRemoveVehiclesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_AddVehicle)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(button_AddAllVehicle)
                .addGap(18, 18, 18)
                .addComponent(panel_PreviewVehicle, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(button_RemoveVehicle)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(button_RemoveAllVehicle)
                .addContainerGap())
        );

        panel_SelectedVehicles.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_SelectedVehicles.border.title"))); // NOI18N
        panel_SelectedVehicles.setName("panel_SelectedVehicles"); // NOI18N

        scrollpanel_SelectedVehicles.setName("scrollpanel_SelectedVehicles"); // NOI18N

        list_SelectedVehicles.setModel(new AbstractListModel() {
            String[] strings = { "Vehicle 1", "Vehicle 2", "Vehicle 3", "Vehicle 4", "Vehicle 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_SelectedVehicles.setName("list_SelectedVehicles"); // NOI18N
        scrollpanel_SelectedVehicles.setViewportView(list_SelectedVehicles);

        GroupLayout panel_SelectedVehiclesLayout = new GroupLayout(panel_SelectedVehicles);
        panel_SelectedVehicles.setLayout(panel_SelectedVehiclesLayout);
        panel_SelectedVehiclesLayout.setHorizontalGroup(
            panel_SelectedVehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_SelectedVehicles, GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
        );
        panel_SelectedVehiclesLayout.setVerticalGroup(
            panel_SelectedVehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_SelectedVehicles, GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
        );

        GroupLayout tab_VehiclesLayout = new GroupLayout(tab_Vehicles);
        tab_Vehicles.setLayout(tab_VehiclesLayout);
        tab_VehiclesLayout.setHorizontalGroup(
            tab_VehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, tab_VehiclesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_AvailableVehicles, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_AddRemoveVehicles, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panel_SelectedVehicles, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tab_VehiclesLayout.setVerticalGroup(
            tab_VehiclesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, tab_VehiclesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_VehiclesLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(panel_SelectedVehicles, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_AvailableVehicles, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_AddRemoveVehicles, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabContainer.addTab(resourceMap.getString("tab_Vehicles.TabConstraints.tabTitle"), tab_Vehicles); // NOI18N

        tab_Environment.setName("tab_Environment"); // NOI18N

        panel_AvailableEnvironments.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_AvailableEnvironments.border.title"))); // NOI18N
        panel_AvailableEnvironments.setName("panel_AvailableEnvironments"); // NOI18N

        scrollpanel_AvailableEnvironments.setName("scrollpanel_AvailableEnvironments"); // NOI18N

        list_AvailableEnvironments.setModel(new AbstractListModel() {
            String[] strings = { "Enviro 1", "Enviro 2", "Enviro 3", "Enviro 4", "Enviro 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_AvailableEnvironments.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list_AvailableEnvironments.setName("list_AvailableEnvironments"); // NOI18N
        scrollpanel_AvailableEnvironments.setViewportView(list_AvailableEnvironments);

        GroupLayout panel_AvailableEnvironmentsLayout = new GroupLayout(panel_AvailableEnvironments);
        panel_AvailableEnvironments.setLayout(panel_AvailableEnvironmentsLayout);
        panel_AvailableEnvironmentsLayout.setHorizontalGroup(
            panel_AvailableEnvironmentsLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_AvailableEnvironments, GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
        );
        panel_AvailableEnvironmentsLayout.setVerticalGroup(
            panel_AvailableEnvironmentsLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_AvailableEnvironments, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
        );

        panel_SelectedEnvironment.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_SelectedEnvironment.border.title"))); // NOI18N
        panel_SelectedEnvironment.setName("panel_SelectedEnvironment"); // NOI18N

        scrollpanel_SelectedEnvironment.setName("scrollpanel_SelectedEnvironment"); // NOI18N

        list_SelectedEnvironment.setModel(new AbstractListModel() {
            String[] strings = { "Enviro 1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_SelectedEnvironment.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list_SelectedEnvironment.setEnabled(false);
        list_SelectedEnvironment.setName("list_SelectedEnvironment"); // NOI18N
        scrollpanel_SelectedEnvironment.setViewportView(list_SelectedEnvironment);

        GroupLayout panel_SelectedEnvironmentLayout = new GroupLayout(panel_SelectedEnvironment);
        panel_SelectedEnvironment.setLayout(panel_SelectedEnvironmentLayout);
        panel_SelectedEnvironmentLayout.setHorizontalGroup(
            panel_SelectedEnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_SelectedEnvironment, GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
        );
        panel_SelectedEnvironmentLayout.setVerticalGroup(
            panel_SelectedEnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(scrollpanel_SelectedEnvironment, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        );

        panel_SetEnvironment.setName("panel_SetEnvironment"); // NOI18N

        button_SetEnvironment.setText(resourceMap.getString("button_SetEnvironment.text")); // NOI18N
        button_SetEnvironment.setName("button_SetEnvironment"); // NOI18N

        GroupLayout panel_SetEnvironmentLayout = new GroupLayout(panel_SetEnvironment);
        panel_SetEnvironment.setLayout(panel_SetEnvironmentLayout);
        panel_SetEnvironmentLayout.setHorizontalGroup(
            panel_SetEnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(panel_SetEnvironmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_SetEnvironment, GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_SetEnvironmentLayout.setVerticalGroup(
            panel_SetEnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, panel_SetEnvironmentLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_SetEnvironment)
                .addContainerGap())
        );

        panel_PreviewEnvironment.setBorder(BorderFactory.createTitledBorder(resourceMap.getString("panel_PreviewEnvironment.border.title"))); // NOI18N
        panel_PreviewEnvironment.setName("panel_PreviewEnvironment"); // NOI18N

        processing_Environment.setBackground(resourceMap.getColor("processing_Environment.background")); // NOI18N
        processing_Environment.setName("processing_Environment"); // NOI18N

        GroupLayout processing_EnvironmentLayout = new GroupLayout(processing_Environment);
        processing_Environment.setLayout(processing_EnvironmentLayout);
        processing_EnvironmentLayout.setHorizontalGroup(
            processing_EnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );
        processing_EnvironmentLayout.setVerticalGroup(
            processing_EnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 285, Short.MAX_VALUE)
        );

        GroupLayout panel_PreviewEnvironmentLayout = new GroupLayout(panel_PreviewEnvironment);
        panel_PreviewEnvironment.setLayout(panel_PreviewEnvironmentLayout);
        panel_PreviewEnvironmentLayout.setHorizontalGroup(
            panel_PreviewEnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(processing_Environment, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_PreviewEnvironmentLayout.setVerticalGroup(
            panel_PreviewEnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(processing_Environment, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout tab_EnvironmentLayout = new GroupLayout(tab_Environment);
        tab_Environment.setLayout(tab_EnvironmentLayout);
        tab_EnvironmentLayout.setHorizontalGroup(
            tab_EnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(tab_EnvironmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_AvailableEnvironments, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(tab_EnvironmentLayout.createParallelGroup(Alignment.TRAILING)
                    .addGroup(tab_EnvironmentLayout.createSequentialGroup()
                        .addComponent(panel_SetEnvironment, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(panel_SelectedEnvironment, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panel_PreviewEnvironment, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tab_EnvironmentLayout.setVerticalGroup(
            tab_EnvironmentLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, tab_EnvironmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_EnvironmentLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(panel_AvailableEnvironments, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Alignment.LEADING, tab_EnvironmentLayout.createSequentialGroup()
                        .addGroup(tab_EnvironmentLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(panel_SelectedEnvironment, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(tab_EnvironmentLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(panel_SetEnvironment, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(panel_PreviewEnvironment, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabContainer.addTab(resourceMap.getString("tab_Environment.TabConstraints.tabTitle"), tab_Environment); // NOI18N

        text_Status.setEditable(false);
        text_Status.setText(resourceMap.getString("text_Status.text")); // NOI18N
        text_Status.setName("text_Status"); // NOI18N

        button_Save.setText(resourceMap.getString("button_Save.text")); // NOI18N
        button_Save.setName("button_Save"); // NOI18N
        button_Save.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                button_SaveMouseClicked(evt);
            }
        });

        button_SaveAsNew.setText(resourceMap.getString("button_SaveAsNew.text")); // NOI18N
        button_SaveAsNew.setName("button_SaveAsNew"); // NOI18N
        button_SaveAsNew.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                button_SaveAsNewMouseClicked(evt);
            }
        });

        ActionMap actionMap = Application.getInstance(VehiclesApp.class).getContext().getActionMap(SimulationEditor.class, this);
        button_Cancel.setAction(actionMap.get("cancel")); // NOI18N
        button_Cancel.setText(resourceMap.getString("button_Cancel.text")); // NOI18N
        button_Cancel.setName("button_Cancel"); // NOI18N

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(text_Status, GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(button_Save)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(button_SaveAsNew)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(button_Cancel))
                    .addComponent(panel_SelectedSimulation, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabContainer, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_SelectedSimulation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(tabContainer, GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(button_Cancel)
                    .addComponent(text_Status, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_SaveAsNew)
                    .addComponent(button_Save))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dropdown_SelectedSimulationItemStateChanged(ItemEvent evt) {//GEN-FIRST:event_dropdown_SelectedSimulationItemStateChanged
        JComboBox tempComboBox = (JComboBox) evt.getSource();
        EditorSimulation selected = (EditorSimulation) tempComboBox.getSelectedItem();
        populateFields(selected);
}//GEN-LAST:event_dropdown_SelectedSimulationItemStateChanged

    private void populateFields(EditorSimulation p_simulation) {
        EditorSimulation tempSimulation = p_simulation;

        text_Author.setText(tempSimulation.getAuthor());
        text_Description.setText(tempSimulation.getDescription());
        text_Name.setText(tempSimulation.getName());
        text_LastModified.setText(tempSimulation.getLastModified());

}

    private void button_SaveMouseClicked(MouseEvent evt) {//GEN-FIRST:event_button_SaveMouseClicked

}//GEN-LAST:event_button_SaveMouseClicked

    private void button_SaveAsNewMouseClicked(MouseEvent evt) {//GEN-FIRST:event_button_SaveAsNewMouseClicked

}//GEN-LAST:event_button_SaveAsNewMouseClicked

    private void formWindowGainedFocus(WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        dropdown_SelectedSimulation.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton button_AddAllVehicle;
    private JButton button_AddVehicle;
    private JButton button_Cancel;
    private JButton button_RemoveAllVehicle;
    private JButton button_RemoveVehicle;
    private JButton button_Save;
    private JButton button_SaveAsNew;
    private JButton button_SetEnvironment;
    private JComboBox dropdown_SelectedSimulation;
    private JLabel label_Evolution;
    private JLabel label_Perishable;
    private JList list_AvailableEnvironments;
    private JList list_AvailableVehicles;
    private JList list_SelectedEnvironment;
    private JList list_SelectedVehicles;
    private JPanel panel_AddRemoveVehicles;
    private JPanel panel_Author;
    private JPanel panel_AvailableEnvironments;
    private JPanel panel_AvailableVehicles;
    private JPanel panel_Configuration;
    private JPanel panel_Description;
    private JPanel panel_LastModified;
    private JPanel panel_Name;
    private JPanel panel_PreviewEnvironment;
    private JPanel panel_PreviewVehicle;
    private JPanel panel_SelectedEnvironment;
    private JPanel panel_SelectedSimulation;
    private JPanel panel_SelectedVehicles;
    private JPanel panel_SetEnvironment;
    private JPanel processing_Environment;
    private JPanel processing_Vehicle;
    private JRadioButton radio_Evolution_Off;
    private JRadioButton radio_Evolution_On;
    private JRadioButton radio_Perishable_Off;
    private JRadioButton radio_Perishable_On;
    private JScrollPane scrollpanel_AvailableEnvironments;
    private JScrollPane scrollpanel_AvailableVehicles;
    private JScrollPane scrollpanel_Description;
    private JScrollPane scrollpanel_SelectedEnvironment;
    private JScrollPane scrollpanel_SelectedVehicles;
    private JTabbedPane tabContainer;
    private JPanel tab_Environment;
    private JPanel tab_Properties;
    private JPanel tab_Vehicles;
    private JTextField text_Author;
    private JTextArea text_Description;
    private JTextField text_LastModified;
    private JTextField text_Name;
    private JTextField text_Status;
    // End of variables declaration//GEN-END:variables
    private PApplet embed;
    private EditorSimulation[] simulationArray;
    private DefaultComboBoxModel simulationDropDown;
}
